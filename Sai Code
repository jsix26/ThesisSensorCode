#define ARM_MATH_CM0PLUS
#include <XBee.h>
#include <SPI.h>
#include <Wire.h>

#include <ADE9153A.h>
#include <ADE9153AAPI.h>

/* Basic initializations */
#define SPI_SPEED 1000000       //SPI Speed
#define CS_PIN 17               //8-->Arduino Zero. 15-->ESP8266 
#define ADE9153A_RESET_PIN A5   //On-board Reset Pin
#define USER_INPUT 5            //On-board User Input Button Pin
#define LED 6                   //On-board LED pin

ADE9153AClass ade9153A;

XBee xbee = XBee();
uint8_t payload[] = {'1', '4', ',', 0, 0, 0, 0, 0, 0, 0,};

XBeeAddress64 addr64 = XBeeAddress64(0x0013A200, 0x421BE305);
ZBTxRequest tx = ZBTxRequest(addr64, payload, sizeof(payload));

struct EnergyRegs energyVals;
struct PowerRegs powerVals;
struct RMSRegs rmsVals;
struct PQRegs pqVals;
struct AcalRegs acalVals;
struct Temperature tempVal;

void readandwrite(void);
void resetADE9153A(void);

int ledState = LOW;
int inputState = LOW;
const long blinkInterval = 500;

char vrmsstr[6];

int mode = 1;
int msdelay = 0;

void setup()
{
  cli();
  CLKPR = _BV(CLKPCE);
  CLKPR = 0;
  sei();
  pinMode(LED, OUTPUT);
  pinMode(USER_INPUT, INPUT);
  pinMode(ADE9153A_RESET_PIN, OUTPUT);
  digitalWrite(ADE9153A_RESET_PIN, HIGH);
  Serial.begin(2400);
  Serial1.begin(2400);
  xbee.setSerial(Serial1);
  
  resetADE9153A();           
  delay(1000);
  bool commscheck = ade9153A.SPI_Init(SPI_SPEED, CS_PIN); 
  if (!commscheck) {
    Serial.println("ADE9153A Shield not detected. Plug in Shield and reset the Arduino");
    while (!commscheck) {     
      delay(1000);
    }
  }

  ade9153A.SetupADE9153A();
  Serial.println(String(ade9153A.SPI_Read_32(REG_VERSION_PRODUCT), HEX));
  ade9153A.SPI_Write_32(REG_AIGAIN, -268435456);
  delay(500);
  //SIGNAL STR LEDs
  pinMode(6, OUTPUT);
  pinMode(30, OUTPUT);
  pinMode(11, OUTPUT);
  pinMode(9, OUTPUT);
  pinMode(10, OUTPUT);
  //STATUS LEDs
  pinMode(22, OUTPUT); // Green
  pinMode(12, OUTPUT); // Yellow
  pinMode(4, OUTPUT); // Red
  //PCINT4 pin
  delay(1000);
  digitalWrite(4, HIGH);
  //SIGNAL STR LEDs
  digitalWrite(6, HIGH);
  digitalWrite(30, HIGH);
  digitalWrite(11, HIGH);
  digitalWrite(9, HIGH);
  digitalWrite(10, HIGH);
}


void loop()
{
  readandwrite();
  float vrms = rmsVals.VoltageRMSValue / 1000;
  dtostrf(vrms, 7, 2, vrmsstr);
  payload[3] = vrmsstr[0];
  payload[4] = vrmsstr[1];
  payload[5] = vrmsstr[2];
  payload[6] = vrmsstr[3];
  payload[7] = vrmsstr[4];
  payload[8] = vrmsstr[5];
  payload[9] = vrmsstr[6];
  
  checkForIncomingData(); // Check for incoming data to update mode and msdelay

  if (vrms >= 210)
  {
    digitalWrite(22, LOW);
    digitalWrite(12, LOW);
    digitalWrite(4, HIGH);
    digitalWrite(6, HIGH);
    digitalWrite(30, HIGH);
    digitalWrite(11, HIGH);
    digitalWrite(9, HIGH);
    digitalWrite(10, HIGH);
    delay(30);
    digitalWrite(22, HIGH);
    xbee.send(tx);
    delay(30);

  }
  else if (vrms < 210)
  {
    digitalWrite(22, LOW);
    digitalWrite(12, LOW);
    digitalWrite(4, HIGH);
    digitalWrite(6, HIGH);
    digitalWrite(30, HIGH);
    digitalWrite(11, HIGH);
    digitalWrite(9, HIGH);
    digitalWrite(10, HIGH);
    delay(30);
    digitalWrite(12, HIGH);
    xbee.send(tx);
    delay(30);

  }
  else
  {
    digitalWrite(22, LOW);
    digitalWrite(12, LOW);
    digitalWrite(4, HIGH);
    digitalWrite(6, HIGH);
    digitalWrite(30, HIGH);
    digitalWrite(11, HIGH);
    digitalWrite(9, HIGH);
    digitalWrite(10, HIGH);
    delay(30);
    digitalWrite(4, LOW);
    xbee.send(tx);
    delay(30);

  }
}

void readandwrite()
{
  ade9153A.ReadPowerRegs(&powerVals);
  ade9153A.ReadRMSRegs(&rmsVals);
  ade9153A.ReadPQRegs(&pqVals);
  ade9153A.ReadTemperature(&tempVal);
}

void resetADE9153A(void)
{
  digitalWrite(ADE9153A_RESET_PIN, LOW);
  delay(100);
  digitalWrite(ADE9153A_RESET_PIN, HIGH);
  delay(1000);
  Serial.println("Reset Done");
}
